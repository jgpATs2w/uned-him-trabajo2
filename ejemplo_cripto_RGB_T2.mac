kill(all);

alfabeto:"RGB";
alfabetos_de_cifrado: ["BRG", "GBR", "RGB"];
alfabetos_de_descifrado: ["GBR", "BRG", "RGB"];
m0: "RBBRBGGBBGGBRBBR";

cifrado_PA(mensaje, alfabeto, alfabetos_de_cifrado):= block(
    [nca:slength(alfabeto),
    n:slength(mensaje),
    mensaje_cifrado:""],
    for i:1 thru n do (
        caracter: charat(mensaje, i),
        posicion: sposition(caracter, alfabeto),
        cifrado: 1 + mod((i-1),nca),
        caracter_sustitutivo: charat(part(alfabetos_de_cifrado,cifrado), posicion),
        mensaje_cifrado: sconcat(mensaje_cifrado,caracter_sustitutivo)
    ),
    return(mensaje_cifrado)
);

descifrado_PA(mensaje, alfabeto, alfabetos_de_cifrado):= block(
    [nca:slength(alfabeto),
    n:slength(mensaje),
    mensaje_cifrado:""],
    for i:1 thru n do (
        caracter: charat(mensaje, i),
        posicion: sposition(caracter, alfabeto),
        cifrado: 1 + mod((i-1),nca),
        caracter_sustitutivo: charat(part(alfabetos_de_descifrado,cifrado), posicion),
        mensaje_cifrado: sconcat(mensaje_cifrado,caracter_sustitutivo)
    ),
    return(mensaje_cifrado)
);

m1: cifrado_PA(m0,alfabeto, alfabetos_de_cifrado);

m2: descifrado_PA(m1,alfabeto, alfabetos_de_cifrado);

disp("mensaje original:   ", m0);
disp("mensaje cifrado:    ", m1);
disp("mensaje descifrado: ", m2);

if(sequal(m0,m2)) then
  disp("Mensaje descifrado correctamente")
else
  disp("El mensaje recibido no coincide con el original");

